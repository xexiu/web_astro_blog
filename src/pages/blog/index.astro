---
export const prerender = false; // Need for Astro.cookie in PROD
import Posts from '@components/postcard/Posts.astro';
import SearchBar from '@components/search-bar/SearchBar.astro';
import SectionContainer from '@components/section/SectionContainer.astro';
import Tags from '@components/tags/Tags.astro';
import { getCollectionFor } from '@js/server/utils';
import { getTagsFor, isUserAdmin } from '@js/utils';
import MainLayout from '@layouts/MainLayout.astro';
import data from '@schemas/blog-data.json';
import Tabs from '@xexiu/astro-tabs';
import { Icon } from 'astro-icon';
import { getCollection } from 'astro:content';

const cookie = Astro.request.headers.get('cookie');
const isAdmin = isUserAdmin(cookie);
const blogs = await getCollectionFor('blog', isAdmin, getCollection);
const blogTags = getTagsFor(isAdmin, blogs);
const keys = Object.keys(blogs);
const sortedBlogTags = blogTags.sort((a, b) => {
   return (a as any).localeCompare(b, 'es', { sensitivity: 'base' });
});
---

<MainLayout title={data.title} description={data.description}>
   <SearchBar data={[...blogs.latest, ...blogs.pinned]} slot="search-bar" />
   <SectionContainer ariaLabel="Publicaciones Recientes">
      <div class="blog-page">
         <Tabs
            {keys}
            tabTitles={['Últimos artículos', 'Destacados', 'Privados']}
         >
            {
               (key: string) => {
                  if (key === 'private' && !isAdmin) {
                     return (
                        <div class="private-layout">
                           <span>Este contenido es privado</span>
                           <Icon
                              name="carbon:virtual-private-cloud"
                              height={44}
                              width={44}
                              class="contenido-privado-icon"
                              alt="Contenido Privado"
                           />
                        </div>
                     );
                  }

                  return (
                     <Fragment>
                        <Posts entries={blogs[key]} />
                        <div class="post-card-tags">
                           <Tags
                              tags={sortedBlogTags}
                              showCountBadge={true}
                              classes="blog-page-tag"
                           />
                        </div>
                     </Fragment>
                  );
               }
            }
         </Tabs>
      </div>
   </SectionContainer>
</MainLayout>

<style is:inline>
   .post-card-tags {
      display: flex;
      padding: 10px 0;
   }
   .private-layout {
      width: 100%;
      max-width: 600px;
      margin: 0 auto;
      padding: 20px;
      background-color: #f0f0f0;
      font-size: var(--fs-lg);
      text-align: center;
      box-sizing: border-box;
   }

   .contenido-privado-icon {
      margin: 0 auto;
   }

   .tab-wrapper:has(.radio-tab:checked) {
      box-shadow: 0 2px 4px rgb(0 0 0 / 20%);
      text-shadow: 0 2px 3px rgb(255 255 255 / 40%);
      &:hover {
         box-shadow: var(--shadow-md);
      }
   }
</style>
