---
import Breadcrumbs from '@components/breadcrumbs/Breadcrumbs.astro';
import {
   ArticleAuthor,
   ArticleAuthorContainer,
   ArticleInfoContainer,
   ArticleNavigation,
   ArticleReadingTime,
   ArticleTools
} from '@components/article';
import CodeBlock from '@components/markdown/CodeBlock.astro';
import MarkdownImages from '@components/markdown/MarkdownImages.astro';
import NormalizeLinks from '@components/markdown/NormalizeLinks.astro';
import Tags from '@components/tags/Tags.astro';
import MainLayout from '@layouts/MainLayout.astro';
import '@styles/blog.css';
import { Markdown } from 'astro-remote';
import { getCollection } from 'astro:content';
import { ViewTransitions } from 'astro:transitions';
import { Icon } from 'astro-icon';
import { findRelatedPostsByTag, isUserAdmin, slugify } from '@js/utils';
import RelatedArticles from '@components/RelatedArticles.astro';
import TagHeading from '@components/common/TagHeading.astro';
import FormCommentGiscus from '@components/FormCommentGiscus.astro';
import PostCardCategory from '@components/postcard/PostCardCategory.astro';
import ArticleContainer from '@components/article/ArticleContainer.astro';
import Modal from '@xexiu/astro-modal';
import ProgressBar from '@xexiu/astro-progress-bar';
import SocialShareTitle from '@components/social-share/SocialShareTitle.astro';
import SocialShareOptions from '@components/social-share/SocialShareOptions.astro';
import SocialShareFooter from '@components/social-share/SocialShareFooter.astro';
import SearchBar from '@components/search-bar/SearchBar.astro';
import { getCollectionFor } from '@js/server/utils';
import Button from '@components/common/button/Button.astro';

export async function getStaticPaths() {
   const blogEntries = await getCollection('blog');

   return blogEntries.map((entry, indexEntry) => ({
      params: { slug: entry.slug },
      props: {
         entry,
         indexEntry,
         nextEntry: blogEntries[indexEntry + 1],
         prevEntry: blogEntries[indexEntry - 1],
         relatedArticles: findRelatedPostsByTag({
            currentPost: entry.data,
            maxRelatedPosts: 3,
            blogPosts: blogEntries
         })
      }
   }));
}

const { entry, nextEntry, prevEntry, relatedArticles } = Astro.props;
// Cookie not working in prod (but works locally) because of this:
// https://answers.netlify.com/t/cookie-not-set-in-deployment-but-works-in-localhost/97069

const cookie = Astro.request.headers.get('cookie');
const isAdmin = isUserAdmin(cookie);
const blogs = await getCollectionFor('blog', isAdmin, getCollection);

const { title, tags, excerpt, category } = entry.data;
---

<MainLayout
   title={entry.data.title}
   description={entry.data.excerpt}
   featured_image={entry.data.featured_image}
   frontmatter={entry}
>
   <SearchBar data={[...blogs.latest, ...blogs.pinned]} slot="search-bar" />
   <ProgressBar />
   <ViewTransitions />
   <Breadcrumbs
      links={[
         { name: 'Inicio', path: '/' },
         { name: 'Blog', path: '/blog' },
         {
            name: title,
            path: `/blog/${entry.slug}`,
            linkIsActive: 'is-active'
         }
      ]}
   />
   <ArticleContainer ariaLabel={title}>
      <div class="article-top-prev-next-wrapper">
         <ArticleNavigation {prevEntry} {nextEntry} />
      </div>

      <div class="category-containter">
         <PostCardCategory
            href={`/blog/category/${slugify(category)}/`}
            text={category}
         />
      </div>

      <div class:list={['article-content']}>
         <TagHeading tag="h1" classes="article-main-heading">
            {title}
         </TagHeading>
         <TagHeading tag="h2" classes="article-main-heading-excerpt">
            {excerpt}
         </TagHeading>
         <div class="tags-wrapper">
            <Tags {tags} />
         </div>
         <div class="markdown-wrapper">
            <Markdown
               content={entry.body}
               sanitize={{ allowComponents: true }}
               components={{
                  img: MarkdownImages,
                  CodeBlock,
                  a: NormalizeLinks
               }}
            />
            <ArticleInfoContainer>
               <ArticleAuthorContainer>
                  <ArticleAuthor post={entry} />
                  <ArticleReadingTime post={entry} />
               </ArticleAuthorContainer>
               <ArticleTools>
                  <div class="article-speech-container">
                     <xe-article-speech
                        class="tooltip xe-article-speech"
                        title="Escuchar artículo"
                        data-tooltip-placement="top"
                     >
                        <Button
                           aria-pressed="false"
                           aria-label="Escuchar artículo"
                           classes="listen-article"
                           data-article-text={`título: ${title}, descripción: ${excerpt}, artículo: ${entry.body}`}
                        />
                     </xe-article-speech>
                  </div>
                  <div class="article-share-container">
                     <Modal
                        id="shareSocial"
                        ariaLabel="Compartir en las redes"
                        modalBtnClass="modal-button"
                        btnCloseAriaLabel="Cerrar Modal"
                     >
                        <Icon
                           name="octicon:share-16"
                           height="28"
                           width="28"
                           slot="open-modal"
                           class="icon-share-modal"
                           aria-label="Compartir en las redes"
                        />
                        <SocialShareTitle slot="modal-title" />
                        <SocialShareOptions
                           slot="modal-main"
                           linkUrl={`https://xexiu.dev/blog/${entry.slug}`}
                           {title}
                           {excerpt}
                        />
                        <SocialShareFooter
                           slot="modal-footer"
                           text={`https://xexiu.dev/blog/${entry.slug}`}
                        />
                     </Modal>
                  </div>
               </ArticleTools>
            </ArticleInfoContainer>
         </div>
      </div>
      <RelatedArticles {relatedArticles} />
      <FormCommentGiscus />
   </ArticleContainer>
</MainLayout>

<script>
  import { ArticleSpeech } from '@js/custom-elements';

  customElements.define('xe-article-speech', ArticleSpeech);
</script>
