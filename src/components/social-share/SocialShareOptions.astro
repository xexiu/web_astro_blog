---
import { Link } from '@components/common/link';
import data from './share-data.json';
import { formatString } from '@js/utils';

interface Props {
   linkUrl: string;
   title: string;
   excerpt: string;
}

const { linkUrl, title, excerpt } = Astro.props;
const socials = Object.keys(data);
---

<div class="share__modal__options" slot="social-options">
   <ul class="list">
      {
         socials.map((social) => {
            const socialData = data[social];

            return (
               <li class="list__item">
                  <Link
                     icon={{
                        name: socialData.icon.name,
                        side: 'left',
                        width: '22',
                        height: '22',
                     }}
                     href={formatString(
                        socialData.shareLink,
                        {
                           __url__: encodeURIComponent(`${linkUrl}?ref=social-share-${social}`),
                           __title__: encodeURIComponent(title),
                           __excerpt__: encodeURIComponent(excerpt)
                        }
                     )}
                     alt={`Share on ${social}`}
                     isFilled={false}
                     aria-label={`Share on ${social}`}
                     data-icon={social}
                     isExternalLink={false}
                     target="_blank"
                     rel="nofollow"
                  />
               </li>
            );
         })
      }
   </ul>
</div>

<style>
   .share__modal__options {
      margin: 20px 0;
      display: flex;
      justify-content: center;
   }
   .list {
      display: grid;
      grid-template-columns: repeat(6, 1fr);
      row-gap: 1em;
      column-gap: 1em;
      padding: 0;
      margin: 0;
   }
   .list__item {
      display: flex;
      flex-direction: column;
      row-gap: 0.5em;
      align-items: center;
      justify-content: center;
      font-weight: 500;
      opacity: 0.9;
      cursor: pointer;
      border: 1px solid #ddd;
      border-radius: 50%;
      height: 44px;
      width: 44px;
      color: #222;
      transition: all 0.5s;
      &:hover {
         background-color: var(--color-red);
         transition: all 0.5s;
      }
      a {
         display: flex;
         width: 100%;
         height: 100%;
         align-items: center;
         justify-content: center;
         text-decoration: none;
         padding: 10px 0;
         color: #222;
         &:hover {
            color: white;
         }
      }
   }
   @media screen and (width <= 650px) {
      .list {
         grid-template-columns: repeat(3, 1fr);
      }
   }
</style>
