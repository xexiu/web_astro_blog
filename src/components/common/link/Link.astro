---
import type { LinkProps } from 'types/interfaces';
import ExternalLink from './ExternalLink.astro';
import InternalLink from './InternalLink.astro';

const {
   text,
   href,
   customStyle,
   icon,
   isFilled = true,
   borderVisible = false,
   isExternalLink = false,
   classes = 'link',
   ...rest
} = Astro.props as LinkProps;

function isInternalURLValid(url: string) {
   if(!url) {
      return false;
   }

   const whiteListDomains = ['https://xexiu', 'http://localhost', '/'];

   for (const domain of whiteListDomains) {
      if (url.startsWith(domain)) {
         return true;
      }
   }

   return false;
}

const isInternalUrl = isInternalURLValid(href);
---

{
   isExternalLink && !isInternalUrl ? (
      <ExternalLink
         {href}
         {text}
         {icon}
         classes={`external-link ${classes}`}
         {customStyle}
         {isFilled}
         {borderVisible}
         rel='noopener'
         {...rest}
      >
         <slot />
      </ExternalLink>
   ) : (
      <InternalLink
         {href}
         {text}
         {icon}
         classes={`internal-link ${classes}`}
         {customStyle}
         {isFilled}
         {borderVisible}
         {...rest}
      >
         <slot />
      </InternalLink>
   )
}
